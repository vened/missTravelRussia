- photo = user.photos.present? ? user.photos.find_by(root: true) : nil
.usersGrid-photo class="#{className}" style="background-image: url('#{photo.photo_src.middle}')"
  = link_to '', user_path(user), class: "usersGrid-photoLink"
  .usersGrid-number= VotesQuery.new.anketa_position(user)
  .usersGrid-bar
    = link_to user_path(user), class: "usersGrid-userInfo" do
      .usersGrid-bar-title
        = user.name
        |,&nbsp;
        = user.age
      .usersGrid-bar-info
        = user.organization
        - if user.location.present?
          |,&nbsp;
          = user.location
    .usersGrid-userVotes id="anketa-item-count-#{user.number}"
      .usersGrid-voteAction
        - if user_signed_in? && policy(current_user).user?
          - if VotesQuery.new.is_votes(current_user, user.number)
            = button_to votes_voteable_path(user),
                    class: 'usersGrid-voteActionBtn',
                    title: "Нажмите что бы проголосовать",
                    data: { toggle: "tooltip", placement: "left" },
                    remote: true do
              = image_tag asset_pack_path 'packs/img/like.svg'
          - else
            button.usersGrid-voteActionBtn[
              title="Вы уже проголосовали за эту девушку"
              data-toggle="tooltip"
              data-placement="left"
              ]
              = image_tag asset_pack_path 'packs/img/like-no.svg'
        - else
          button.usersGrid-voteActionBtn data-toggle="modal" data-target="#myModal"
            = image_tag asset_pack_path 'packs/img/like.svg'
      .usersGrid-countVotes
        = user.votes